#!/bin/bash
# ----------------------------------------------------------------------
# snapshot daily rotate
# ----------------------------------------------------------------------
# intended to be run daily as a cron job to convert most recent hourly
# snapshot to newest daily snapshot
# ----------------------------------------------------------------------

# avoid accidental use of $PATH
unset PATH

# ------------- system commands used by this script --------------------

ID=/usr/bin/id;
ECHO=/bin/echo;
HDIUTIL=/usr/bin/hdiutil
RM=/bin/rm;
MV=/bin/mv;
FIND=/usr/bin/find;
CPIO=/usr/bin/cpio;

# ------------- file locations -----------------------------------------

SPARSE_BUNDLE=/Volumes/Ganymede/backups/jove.sparsebundle
SNAPSHOT_RW=/Volumes/backup

# ------------- the script itself --------------------------------------

# make sure we're running as root
if (( `$ID -u` != 0 )); then
  $ECHO "snapshot: Sorry, must be root...";
  exit;
fi;

# attempt to mount the sparseimage; else abort
$HDIUTIL attach -noverify $SPARSE_BUNDLE
if (( $? )); then
  $ECHO "snapshot: Could not mount $SNAPSHOT_RW";
  exit;
fi;


# step 1: delete the oldest snapshot, if it exists:
if [ -d $SNAPSHOT_RW/daily.4 ] ; then
  $RM -rf $SNAPSHOT_RW/daily.4;
fi ;

# step 2: shift the middle snapshots(s) back by one, if they exist
if [ -d $SNAPSHOT_RW/daily.3 ] ; then
  $MV $SNAPSHOT_RW/daily.3 $SNAPSHOT_RW/daily.4;
fi;
if [ -d $SNAPSHOT_RW/daily.2 ] ; then
  $MV $SNAPSHOT_RW/daily.2 $SNAPSHOT_RW/daily.3;
fi;
if [ -d $SNAPSHOT_RW/daily.1 ] ; then
  $MV $SNAPSHOT_RW/daily.1 $SNAPSHOT_RW/daily.2;
fi;
if [ -d $SNAPSHOT_RW/daily.0 ] ; then
  $MV $SNAPSHOT_RW/daily.0 $SNAPSHOT_RW/daily.1;
fi;

# step 3: make a hard-link-only (except for dirs) copy of
# hourly.3, assuming that exists, into daily.0
if [ -d $SNAPSHOT_RW/hourly.3 ] ; then
  cd $SNAPSHOT_RW/hourly.3 && $FIND . -print | $CPIO -pal ../daily.0;
fi;

# all done!
$HDIUTIL detach $SNAPSHOT_RW
